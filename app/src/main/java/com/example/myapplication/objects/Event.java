package com.example.myapplication.objects;

import java.util.ArrayList;
import java.util.List;

// The Event class represents an event with various attributes like ID, title, description, poster URL, date, and limit on entrants.
public class Event {
    private String id;// Unique identifier for the event, typically generated by Firestore.
    private String creatorID; // Device ID of the user who created the event
    private String title; // Title or name of the event.
    private String description; // Description of the event, providing more details.
    private String posterUrl; // URL pointing to the event's poster image stored in Firebase Storage.
    private String QRcode;
    private String dateTime; // Date and time of the event.
    private Long limitEntrants; // Maximum number of entrants allowed for the event; stored as a Long to handle larger numbers.
    private List<String> waitlist;

    // Default constructor required by Firestore to create instances of the Event class.
    public Event() {
        // No initialization required, used by Firestore during data retrieval.
    }

    // Constructor to create an Event instance with specific attributes.
    public Event(String id, String title, String description, String posterUrl, Long limitEntrants) {
        this.id = id; // Assign the unique ID to the event instance.
        this.title = title; // Set the event title.
        this.description = description; // Set the event description.
        this.posterUrl = posterUrl; // Set the URL for the event's poster image.
        this.limitEntrants = limitEntrants; // Set the maximum number of entrants allowed.
        this.waitlist = new ArrayList<>();
    }

    /**
     * Constructor for the administrator's use.
     * @param title
     * @param description
     * @param posterUrl
     * @param QRcode
     * @param creatorID
     */
    public Event(String title, String description, String posterUrl, String QRcode, String creatorID) {
        this.title = title; // Set the event title.
        this.description = description; // Set the event description.
        this.posterUrl = posterUrl; // Set the URL for the event's poster image.
        this.QRcode = QRcode;
        this.creatorID = creatorID;
    }

    public String getCreatorID() {
        return creatorID;
    }

    // Getter method to retrieve the event ID.
    public String getId() {
        return id; // Return the unique identifier of the event.
    }

    // Setter method to set the event ID.
    public void setId(String id) {
        this.id = id; // Assign a unique identifier to the event.
    }

    // Getter method to retrieve the date and time of the event.
    public String getDate() {
        return dateTime; // Return the date and time of the event as a String.
    }

    // Setter method to set the date and time of the event.
    public void setDate(String dateTime) {
        this.dateTime = dateTime; // Assign the provided date and time to the event instance.
    }

    // Getter method to retrieve the title of the event.
    public String getTitle() {
        return title; // Return the event's title.
    }

    // Setter method to set the title of the event.
    public void setTitle(String title) {
        this.title = title; // Assign the provided title to the event instance.
    }

    // Getter method to retrieve the description of the event.
    public String getDescription() {
        return description; // Return the event's description.
    }

    // Setter method to set the description of the event.
    public void setDescription(String description) {
        this.description = description; // Assign the provided description to the event instance.
    }

    // Getter method to retrieve the poster URL of the event.
    public String getPosterUrl() {
        return posterUrl; // Return the URL pointing to the event's poster image.
    }

    // Setter method to set the poster URL of the event.
    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl; // Assign the provided URL to the event's poster.
    }

    // Getter method to retrieve the limit on the number of entrants for the event.
    public Long getLimitEntrants() {
        return limitEntrants; // Return the maximum number of entrants allowed for the event.
    }

    // Setter method to set the limit on the number of entrants for the event.
    public void setLimitEntrants(Long limitEntrants) {
        this.limitEntrants = limitEntrants; // Assign the provided limit value to the event instance.
    }

    // Getter method for Event waitlist
    public List<String> getWaitlist() {
        return waitlist;
    }

    // Setter method to set the waitlist
    public void setWaitlist(List<String> waitlist) {
        this.waitlist = waitlist;
    }
}
